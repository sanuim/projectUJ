{"ast":null,"code":"var _jsxFileName = \"C:\\\\Studia\\\\www\\\\projekt\\\\frontend\\\\src\\\\components\\\\UsersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, Form, Container, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const users = [{\n    user_id: 1,\n    first_name: 'John',\n    last_name: 'Doe',\n    email: 'john.doe@example.com',\n    role: 'user'\n  }, {\n    user_id: 2,\n    first_name: 'Jane',\n    last_name: 'Smith',\n    email: 'jane.smith@example.com',\n    role: 'admin'\n  }, {\n    user_id: 3,\n    first_name: 'Bob',\n    last_name: 'Johnson',\n    email: 'bob.johnson@example.com',\n    role: 'user'\n  }];\n  const filteredUsers = users.filter(user => user.first_name.toLowerCase().includes(filter.toLowerCase()) || user.last_name.toLowerCase().includes(filter.toLowerCase()) || user.email.toLowerCase().includes(filter.toLowerCase()) || user.role.toLowerCase().includes(filter.toLowerCase()));\n  const sortedUsers = filteredUsers.sort((a, b) => {\n    if (sortBy === 'name') {\n      return a.first_name.localeCompare(b.first_name);\n    } else if (sortBy === 'email') {\n      return a.email.localeCompare(b.email);\n    } else if (sortBy === 'role') {\n      return a.role.localeCompare(b.role);\n    }\n    return 0;\n  });\n  const handleOpenUser = userId => {\n    // Implement your logic to open the user record based on the userId\n    console.log(`Opening user record with ID: ${userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between mr-2 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"filter\",\n        className: \"mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Filter users\",\n          value: filter,\n          onChange: e => setFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"sortBy\",\n        className: \"mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: sortBy,\n          onChange: e => setSortBy(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"role\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [user.first_name, \" \", user.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleOpenUser(user.user_id),\n              children: \"Open Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, user.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"7t5Vmq0n9Z3FmcsV7t1Fp/lF8YQ=\");\n_c = UsersPage;\nexport default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useState","Table","Form","Container","Button","jsxDEV","_jsxDEV","UsersPage","_s","filter","setFilter","sortBy","setSortBy","users","user_id","first_name","last_name","email","role","filteredUsers","user","toLowerCase","includes","sortedUsers","sort","a","b","localeCompare","handleOpenUser","userId","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Control","type","placeholder","value","onChange","e","target","as","striped","bordered","hover","map","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Studia/www/projekt/frontend/src/components/UsersPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Form, Container, Button } from 'react-bootstrap';\r\n\r\nconst UsersPage = () => {\r\n  const [filter, setFilter] = useState('');\r\n  const [sortBy, setSortBy] = useState('name');\r\n\r\n  const users = [\r\n    { user_id: 1, first_name: 'John', last_name: 'Doe', email: 'john.doe@example.com', role: 'user' },\r\n    { user_id: 2, first_name: 'Jane', last_name: 'Smith', email: 'jane.smith@example.com', role: 'admin' },\r\n    { user_id: 3, first_name: 'Bob', last_name: 'Johnson', email: 'bob.johnson@example.com', role: 'user' },\r\n  ];\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    user.first_name.toLowerCase().includes(filter.toLowerCase()) ||\r\n    user.last_name.toLowerCase().includes(filter.toLowerCase()) ||\r\n    user.email.toLowerCase().includes(filter.toLowerCase()) ||\r\n    user.role.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const sortedUsers = filteredUsers.sort((a, b) => {\r\n    if (sortBy === 'name') {\r\n      return a.first_name.localeCompare(b.first_name);\r\n    } else if (sortBy === 'email') {\r\n      return a.email.localeCompare(b.email);\r\n    } else if (sortBy === 'role') {\r\n      return a.role.localeCompare(b.role);\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  const handleOpenUser = (userId) => {\r\n    // Implement your logic to open the user record based on the userId\r\n    console.log(`Opening user record with ID: ${userId}`);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-center mt-4\">\r\n      <h2>Users List</h2>\r\n      <div className=\"d-flex justify-content-between mr-2 mt-5\">\r\n        <Form.Group controlId=\"filter\" className=\"mr-2\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Filter users\"\r\n            value={filter}\r\n            onChange={(e) => setFilter(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"sortBy\" className=\"mr-2\">\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"email\">Email</option>\r\n            <option value=\"role\">Role</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedUsers.map((user) => (\r\n            <tr key={user.user_id}>\r\n              <td>{user.first_name} {user.last_name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <Button variant=\"primary\" onClick={() => handleOpenUser(user.user_id)}>\r\n                  Open Record\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}