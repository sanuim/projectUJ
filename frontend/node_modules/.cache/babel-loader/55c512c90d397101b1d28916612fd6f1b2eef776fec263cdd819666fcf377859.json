{"ast":null,"code":"var _jsxFileName = \"C:\\\\Studia\\\\www\\\\projekt\\\\frontend\\\\src\\\\components\\\\UsersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ListGroup, Form, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const users = [{\n    user_id: 1,\n    first_name: 'John',\n    last_name: 'Doe',\n    email: 'john.doe@example.com',\n    role: 'user'\n  }, {\n    user_id: 2,\n    first_name: 'Jane',\n    last_name: 'Smith',\n    email: 'jane.smith@example.com',\n    role: 'admin'\n  }, {\n    user_id: 3,\n    first_name: 'Bob',\n    last_name: 'Johnson',\n    email: 'bob.johnson@example.com',\n    role: 'user'\n  }];\n  const filteredUsers = users.filter(user => user.first_name.toLowerCase().includes(filter.toLowerCase()) || user.last_name.toLowerCase().includes(filter.toLowerCase()) || user.email.toLowerCase().includes(filter.toLowerCase()) || user.role.toLowerCase().includes(filter.toLowerCase()));\n  const sortedUsers = filteredUsers.sort((a, b) => {\n    if (sortBy === 'name') {\n      return a.first_name.localeCompare(b.first_name);\n    } else if (sortBy === 'email') {\n      return a.email.localeCompare(b.email);\n    } else if (sortBy === 'role') {\n      return a.role.localeCompare(b.role);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista u\\u017Cytkownik\\xF3w\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Filtruj u\\u017Cytkownik\\xF3w\",\n          value: filter,\n          onChange: e => setFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"sortBy\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Sortuj wed\\u0142ug:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: sortBy,\n          onChange: e => setSortBy(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Imi\\u0119\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"role\",\n            children: \"Rola\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: sortedUsers.map(user => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [user.first_name, \" \", user.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 64\n        }, this), \"Email: \", user.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 32\n        }, this), \"Rola: \", user.role]\n      }, user.user_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"7t5Vmq0n9Z3FmcsV7t1Fp/lF8YQ=\");\n_c = UsersPage;\nexport default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useState","ListGroup","Form","Container","jsxDEV","_jsxDEV","UsersPage","_s","filter","setFilter","sortBy","setSortBy","users","user_id","first_name","last_name","email","role","filteredUsers","user","toLowerCase","includes","sortedUsers","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Control","type","placeholder","value","onChange","e","target","Label","as","map","Item","_c","$RefreshReg$"],"sources":["C:/Studia/www/projekt/frontend/src/components/UsersPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ListGroup, Form, Container } from 'react-bootstrap';\r\n\r\nconst UsersPage = () => {\r\n  const [filter, setFilter] = useState('');\r\n  const [sortBy, setSortBy] = useState('name');\r\n\r\n  const users = [\r\n    { user_id: 1, first_name: 'John', last_name: 'Doe', email: 'john.doe@example.com', role: 'user' },\r\n    { user_id: 2, first_name: 'Jane', last_name: 'Smith', email: 'jane.smith@example.com', role: 'admin' },\r\n    { user_id: 3, first_name: 'Bob', last_name: 'Johnson', email: 'bob.johnson@example.com', role: 'user' },\r\n  ];\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    user.first_name.toLowerCase().includes(filter.toLowerCase()) ||\r\n    user.last_name.toLowerCase().includes(filter.toLowerCase()) ||\r\n    user.email.toLowerCase().includes(filter.toLowerCase()) ||\r\n    user.role.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const sortedUsers = filteredUsers.sort((a, b) => {\r\n    if (sortBy === 'name') {\r\n      return a.first_name.localeCompare(b.first_name);\r\n    } else if (sortBy === 'email') {\r\n      return a.email.localeCompare(b.email);\r\n    } else if (sortBy === 'role') {\r\n      return a.role.localeCompare(b.role);\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <h2>Lista użytkowników</h2>\r\n      <Form>\r\n        <Form.Group controlId=\"filter\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Filtruj użytkowników\"\r\n            value={filter}\r\n            onChange={(e) => setFilter(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"sortBy\">\r\n          <Form.Label>Sortuj według:</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n          >\r\n            <option value=\"name\">Imię</option>\r\n            <option value=\"email\">Email</option>\r\n            <option value=\"role\">Rola</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n      <ListGroup>\r\n        {sortedUsers.map((user) => (\r\n          <ListGroup.Item key={user.user_id}>\r\n            <strong>{user.first_name} {user.last_name}</strong><br />\r\n            Email: {user.email}<br />\r\n            Rola: {user.role}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}