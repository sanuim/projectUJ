{"ast":null,"code":"var _jsxFileName = \"C:\\\\Studia\\\\www\\\\projekt\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport LoggedRouter from \"./components/LoggedRouter\";\nimport UnLoggedRouter from \"./components/UnLoggedRouter\";\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accessToken = localStorage.getItem('accessToken') || '';\nconst isLogged = localStorage.getItem('isLogged') || 'false';\n\n// Setting baseURL\naxios.defaults.baseURL = 'http://localhost:8080';\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), isLogged && /*#__PURE__*/_jsxDEV(LoggedRouter, {\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }, this), !isLogged && /*#__PURE__*/_jsxDEV(UnLoggedRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Navigation","LoggedRouter","UnLoggedRouter","axios","Provider","store","jsxDEV","_jsxDEV","accessToken","localStorage","getItem","isLogged","defaults","baseURL","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Studia/www/projekt/frontend/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport LoggedRouter from \"./components/LoggedRouter\";\nimport UnLoggedRouter from \"./components/UnLoggedRouter\";\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nconst accessToken = localStorage.getItem('accessToken') || '';\nconst isLogged = localStorage.getItem('isLogged') || 'false';\n\n// Setting baseURL\naxios.defaults.baseURL = 'http://localhost:8080';\n\nconst App = () => {\n  return (\n      <div>\n        <Router >\n          <Navigation accessToken={accessToken}/>\n            {isLogged && <LoggedRouter accessToken={accessToken}/>}\n            {!isLogged && <UnLoggedRouter/>}\n        </Router>\n      </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,aAAa,IAAIC,MAAM,QAAO,kBAAkB;AACxD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE;AAC7D,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,OAAO;;AAE5D;AACAP,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACIP,OAAA;IAAAQ,QAAA,eACER,OAAA,CAACR,MAAM;MAAAgB,QAAA,gBACLR,OAAA,CAACP,UAAU;QAACQ,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACpCR,QAAQ,iBAAIJ,OAAA,CAACN,YAAY;QAACO,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACrD,CAACR,QAAQ,iBAAIJ,OAAA,CAACL,cAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEZ,CAAC;AAACC,EAAA,GAVIN,GAAG;AAYT,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}